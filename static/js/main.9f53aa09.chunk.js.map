{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","Chatroom","dummy","useRef","messageRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","text","createAt","FieldValue","serverTimestamp","current","scrollIntoView","behaviour","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","type","props","className","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAUAA,IAASC,cAAc,CAErBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAKT,IAASS,OACdC,EAAUV,IAASU,YAgBzB,SAASC,IAKP,OACE,wBAAQC,QALa,WACrB,IAAMC,EAAS,IAAIb,IAASS,KAAKK,mBACjCL,EAAKM,gBAAgBF,IAGrB,iCAUJ,SAASG,IAEP,IAAMC,EAAOC,mBAEPC,EAAWT,EAAUU,WAAW,YAChCC,EAAMF,EAAWG,QAAQ,YAAYC,MAAM,IAL/B,EAODC,YAAkBH,EAAM,CAACI,QAAQ,OAA3CC,EAPW,sBAQaC,qBARb,mBAQXC,EARW,KAQDC,EARC,KAUZC,EAAW,uCAAC,WAAMC,GAAN,mBAAAC,EAAA,6DAChBD,EAAEE,iBADc,EAEKxB,EAAKyB,YAAnBC,EAFS,EAETA,IAAIC,EAFK,EAELA,SAFK,SAIVjB,EAAWkB,IAAI,CACnBC,KAAKV,EACLW,SAASvC,IAASU,UAAU8B,WAAWC,kBACvCN,MACAC,aARc,OAUhBP,EAAa,IACbZ,EAAMyB,QAAQC,eAAe,CAACC,UAAU,WAXxB,2CAAD,sDAcjB,OACE,qCACA,iCACGlB,GAAYA,EAASmB,KAAI,SAAAC,GAAG,OAAE,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACrD,qBAAKC,IAAKjC,OAGb,uBAAMkC,SAAUrB,EAAhB,UACG,uBAAOsB,MAAOxB,EAAWyB,SAAU,SAACtB,GAAD,OAAKF,EAAaE,EAAEuB,OAAOF,UAC9D,wBAAQG,KAAK,SAAb,wBAMN,SAASR,EAAYS,GAAQ,IAAD,EACAA,EAAMR,QAAzBV,EADmB,EACnBA,KAAKH,EADc,EACdA,IAAIC,EADU,EACVA,SACS3B,EAAKyB,YAAYC,IAG1C,OACE,sBAAKsB,UAAW,0BAAhB,UACE,qBAAKC,IAAKtB,IACV,4BAAIE,OAIKqB,MAjFf,WAAgB,IAAD,EACAC,YAAanD,GAAnBoD,EADM,oBAEb,OACE,sBAAKJ,UAAU,MAAf,UACE,2BAGA,kCACGI,EAAK,cAAC7C,EAAD,IAAY,cAACL,EAAD,UCpBXmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9f53aa09.chunk.js","sourcesContent":["import './App.css';\n/* Firebase SDK  */\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n/* Hooks  */\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nimport { useRef, useState } from 'react';\n\nfirebase.initializeApp({\n  //your config\n  apiKey: \"AIzaSyDv6FS0ti7av6jgBxysvc3EPcAkoakSA-Q\",\n  authDomain: \"superchat-29055.firebaseapp.com\",\n  projectId: \"superchat-29055\",\n  storageBucket: \"superchat-29055.appspot.com\",\n  messagingSenderId: \"230807073423\",\n  appId: \"1:230807073423:web:d0828cea6c8008c372b6fa\",\n  measurementId: \"G-BVX4EPKMBG\"\n})\n\nconst auth=firebase.auth();\nconst firestore=firebase.firestore();\n\nfunction App() {\n  const [user]=useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <header>\n        \n      </header>\n      <section>\n        {user?<Chatroom/>:<SignIn/>}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn(){\n  const SignInWithGoogle=()=>{\n    const provider=new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return(\n    <button onClick={SignInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction signOut(){\n  \n  return auth.currentUser && (\n    <button onClick={()=>auth.signOut()}>Sign Out</button>\n  );\n}\nfunction Chatroom() {\n\n  const dummy= useRef();\n\n  const messageRef=firestore.collection('messages');\n  const query=messageRef.orderBy('createAt').limit(25);\n\n  const [messages]=useCollectionData(query,{idField:'id'});\n  const [formValue,setFormValue]=useState();\n\n  const sendMessage=async(e)=>{\n    e.preventDefault();\n    const {uid,photoURL}=auth.currentUser;\n\n    await messageRef.add({\n      text:formValue,\n      createAt:firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setFormValue('');\n    dummy.current.scrollIntoView({behaviour:'smooth'});\n  }\n\n  return (\n    <>\n    <main>\n      {messages && messages.map(msg=><ChatMessage key={msg.id} message={msg}/>)}\n      <div ref={dummy}></div>\n      \n    </main>\n   <form onSubmit={sendMessage}>\n      <input value={formValue} onChange={(e)=>setFormValue(e.target.value)} />\n      <button type=\"submit\">Send</button>\n    </form>\n </>\n  );\n}\n\nfunction ChatMessage(props) {\n  const {text,uid,photoURL}=props.message;\n  const messageClass=uid===auth.currentUser.uid?'sent':'received';\n\n\n  return(\n    <div className={'message ${messageClass}'}>\n      <img src={photoURL} />\n      <p>{text}</p>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}